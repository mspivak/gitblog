service: gitblog
frameworkVersion: '2 || 3'

provider:
  name: aws
  runtime: python3.9
  region: us-west-2
  environment:
    DB_HOST: ${ssm:/Gitblog/Prod/Db/Host}
    DB_PORT: ${ssm:/Gitblog/Prod/Db/Port}
    DB_USER: ${ssm:/Gitblog/Prod/Db/User}
    DB_PASSWORD: ${ssm:/Gitblog/Prod/Db/Password}
    DB_NAME: ${ssm:/Gitblog/Prod/Db/Name}
    GITHUB_CLIENT_ID: ${ssm:/Gitblog/Prod/Github/ClientId}
    GITHUB_CLIENT_SECRET: ${ssm:/Gitblog/Prod/Github/ClientSecret}
    SELF_GITHUB_CLIENT_TOKEN: ${ssm:/Gitblog/Prod/Github/SelfClientToken}

  iam:
    role:
      name: gitblog-lambdaHandler-role
      statements:
        - Effect: Allow
          Resource: 'arn:aws:s3:::gitblog-user-files/*'
          Actions:
            - 's3:PutObject'
            - 's3:GetObject'
            - 'S3:DeleteObject'

functions:
  DjangoHandler:
    handler: wsgi_handler.handler
    timeout: 29
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - http: ANY /
      - http: ANY /{proxy+}

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-domain-manager

custom:
  pythonRequirements:
#    dockerizePip: true
    slim: true
    layer: true
    noDeploy:
      - boto3

  wsgi:
    app: gitblog.wsgi.application
    packRequirements: false

  customDomain:
    domainName: gitblog.link
    certificateName: gitblog.link
    createRoute53Record: true
    apiType: rest
#    endpointType: 'regional'
#    securityPolicy: tls_1_2
#    route53Params:
#      routingPolicy: latency

